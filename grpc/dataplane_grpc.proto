syntax = "proto3";

package config;

option go_package = "dataplane/grpc";

service ConfigService {
  rpc GetConfig (GetConfigRequest) returns (GlobalConfig);
  rpc UpdateConfig (UpdateConfigRequest) returns (UpdateConfigResponse);
  rpc CheckConfigGeneration (CheckConfigGenerationRequest)
    returns (CheckConfigGenerationResponse);
}

message GetConfigRequest {
}

message UpdateConfigRequest {
  GlobalConfig config = 1;
}

message UpdateConfigResponse {
  string message = 1;
  Error error = 2;
}

enum Error {
  ERROR_NONE_UNSPECIFIED = 0;
  ERROR_VALIDATION_FAILED = 1;
  ERROR_APPLY_FAILED = 2;
  ERROR_UNKNOWN_ERROR = 3;
}

message CheckConfigGenerationRequest {
}

message CheckConfigGenerationResponse {
  uint64 generation = 1;
}

message Subnet {
  string name = 1;
  string prefix = 2;
  uint32 vni = 3;
}

message VPC {
  string name = 1;
  string id = 2;
  string vrf = 3;
  repeated Subnet subnets = 4;
  uint32 vni = 5;
}

message Interface {
  string name = 1;
  uint32 index = 2;
  string type = 3;
  string ipaddr = 4;
  string pciaddr = 5;
}

message PeeringIPs {
  string cidr = 1;
  string not = 2;
}

message PeeringAs {
  string cidr = 1;
  string not = 2;
}

message PeeringEntry {
  repeated PeeringIPs ips = 1;
  repeated PeeringAs as = 2;
}

message Peering {
  string name = 1;
  map<string, PeeringEntry> entries = 2;
}

message GlobalConfig {
  repeated VPC vpcs = 1;
  repeated Interface interfaces = 2;
  repeated Peering peerings = 3;
  uint64 generation = 4;
}
